Token multilinecomment (  55, \n    A perfect number is an integer which is equal to the sum of all\n    its divisors including 1 but excluding the number itself.\n    연습문제 2.18 참조\n)
Token      const (  30,            0 )
Token        int (  33,            0 )
Token     %ident (   4,          max )
Token          = (  23,            0 )
Token    %number (   5,          500 )
Token       void (  35,            0 )
Token     %ident (   4,         main )
Token          ( (   7,            0 )
Token          ) (   8,            0 )
Token          { (  37,            0 )
Token        int (  33,            0 )
Token     %ident (   4,            i )
Token          , (  14,            0 )
Token     %ident (   4,            j )
Token          , (  14,            0 )
Token     %ident (   4,            k )
Token          ; (  20,            0 )
Token        int (  33,            0 )
Token     %ident (   4,          rem )
Token          , (  14,            0 )
Token     %ident (   4,          sum )
Token          ; (  20,            0 )
Token linecomment (  53,  rem: remainder)
Token     %ident (   4,            i )
Token          = (  23,            0 )
Token    %number (   5,            2 )
Token      while (  36,            0 )
Token          ( (   7,            0 )
Token     %ident (   4,            i )
Token         <= (  22,            0 )
Token     %ident (   4,          max )
Token          ) (   8,            0 )
Token          { (  37,            0 )
Token     %ident (   4,          sum )
Token          = (  23,            0 )
Token    %number (   5,            0 )
Token     %ident (   4,            k )
Token          = (  23,            0 )
Token     %ident (   4,            i )
Token          / (  18,            0 )
Token    %number (   5,            2 )
Token     %ident (   4,            j )
Token          = (  23,            0 )
Token    %number (   5,            1 )
Token      while (  36,            0 )
Token          ( (   7,            0 )
Token     %ident (   4,            j )
Token         <= (  22,            0 )
Token     %ident (   4,            k )
Token          ) (   8,            0 )
Token          { (  37,            0 )
Token     %ident (   4,          rem )
Token          = (  23,            0 )
Token     %ident (   4,            i )
Token          % (   2,            0 )
Token     %ident (   4,            j )
Token          ; (  20,            0 )
Token         if (  32,            0 )
Token          ( (   7,            0 )
Token     %ident (   4,          rem )
Token         == (  24,            0 )
Token    %number (   5,            0 )
Token     %ident (   4,          sum )
Token         += (  13,            0 )
Token     %ident (   4,            j )
Token          ; (  20,            0 )
Token         ++ (  12,            0 )
Token     %ident (   4,            j )
Token          ; (  20,            0 )
Token          } (  39,            0 )
Token         if (  32,            0 )
Token          ( (   7,            0 )
Token     %ident (   4,            i )
Token         == (  24,            0 )
Token     %ident (   4,          sum )
Token          ) (   8,            0 )
Token     %ident (   4,        write )
Token          ( (   7,            0 )
Token     %ident (   4,            i )
Token          ) (   8,            0 )
Token          ; (  20,            0 )
Token         ++ (  12,            0 )
Token     %ident (   4,            i )
Token          ; (  20,            0 )
Token          } (  39,            0 )
Token          } (  39,            0 )
Token        eof (  29,            0 )
